{"version":3,"sources":["components/TodoApp.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","index.js"],"names":["TodoApp","newTodo","useState","query","setQuery","onSubmit","event","preventDefault","trim","id","Date","title","completed","type","className","value","placeholder","onChange","target","TodoItem","todo","classNames","TodoList","items","map","item","key","App","todos","setTodos","uncompleted","setUncomplited","checkedAll","setCheckedAll","useEffect","count","filter","length","onClick","htmlFor","href","ReactDOM","render","document","getElementById"],"mappings":"4SAGaA,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACZC,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OACE,0BAAMC,SAfa,SAACC,GACpBA,EAAMC,iBAEFJ,EAAMK,QACRP,EAAQ,CACNQ,IAAK,IAAIC,KACTC,MAAOR,EACPS,WAAW,IAIfR,EAAS,MAKP,2BACES,KAAK,OACLC,UAAU,WACVC,MAAOZ,EACPa,YAAY,yBACZC,SAAU,SAACX,GACTF,EAASE,EAAMY,OAAOH,Y,gBCxBnBI,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAEtB,wBAAIN,UAAWO,IAAW,CACxBT,UAAWQ,EAAKR,aAGhB,yBAAKE,UAAU,QACb,2BAAOD,KAAK,WAAWC,UAAU,WACjC,+BAAQM,EAAKT,OACb,4BAAQE,KAAK,SAASC,UAAU,aAElC,2BAAOD,KAAK,OAAOC,UAAU,WCVpBQ,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,wBAAIT,UAAU,aACXS,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAKhB,GACVW,KAAMK,SCgECE,MAtEf,WAAgB,IAAD,EACazB,mBAAS,IADtB,mBACN0B,EADM,KACCC,EADD,OAEyB3B,mBAAS,GAFlC,mBAEN4B,EAFM,KAEOC,EAFP,OAGuB7B,oBAAS,GAHhC,mBAGN8B,EAHM,KAGMC,EAHN,KAuBb,OANAC,qBAAU,WACR,IAAMC,EAAQP,EAAMQ,QAAO,SAAAhB,GAAI,OAAKA,EAAKR,aAEzCmB,EAAeI,EAAME,UACpB,CAACT,IAGF,6BAASd,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,kBAAC,EAAD,CAASb,QAtBC,SAACA,GACf4B,EAAS,CAAC5B,GAAF,mBAAc2B,SAwBpB,6BAASd,UAAU,QACjB,2BACED,KAAK,WACLJ,GAAG,aACHK,UAAU,aACVwB,QA1BU,WAChBT,EAASD,EAAMJ,KAAI,SAAAJ,GAAI,kCAClBA,GADkB,IAErBR,WAAYoB,QAEdC,GAAeD,MAuBX,2BAAOO,QAAQ,cAAf,wBACA,kBAAC,EAAD,CAAUhB,MAAOK,KAGnB,4BAAQd,UAAU,UAChB,0BAAMA,UAAU,cACbgB,EACA,IAFH,cAMA,wBAAIhB,UAAU,WACZ,4BACE,uBAAG0B,KAAK,KAAK1B,UAAU,YAAvB,QAGF,4BACE,uBAAG0B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQ3B,KAAK,SAASC,UAAU,mBAAhC,sBCzDR2B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.66ac9d3d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoApp = ({ newTodo }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (query.trim()) {\n      newTodo({\n        id: +new Date(),\n        title: query,\n        completed: false,\n      });\n    }\n\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        value={query}\n        placeholder=\"What needs to be done?\"\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n    </form>\n  );\n};\n\nTodoApp.propTypes = {\n  newTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({ todo }) => (\n\n  <li className={classNames({\n    completed: todo.completed,\n  })}\n  >\n    <div className=\"view\">\n      <input type=\"checkbox\" className=\"toggle\" />\n      <label>{todo.title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({ items }) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n      <TodoItem\n        key={item.id}\n        todo={item}\n      />\n    ))}\n\n    {/* <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>asdfghj</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"completed\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>qwertyuio</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li className=\"editing\">\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>zxcvbnm</label>\n          <button type=\"button\" className=\"destroy\" />\n        </div>\n        <input type=\"text\" className=\"edit\" />\n      </li>\n\n      <li>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" />\n          <label>1234567890</label>\n          <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li> */}\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequaired,\n  })).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoApp } from './components/TodoApp';\nimport { TodoList } from './components/TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [uncompleted, setUncomplited] = useState(0);\n  const [checkedAll, setCheckedAll] = useState(false);\n\n  const addTodo = (newTodo) => {\n    setTodos([newTodo, ...todos]);\n  };\n\n  const toggleAll = () => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: !checkedAll,\n    })));\n    setCheckedAll(!checkedAll);\n  };\n\n  useEffect(() => {\n    const count = todos.filter(todo => !todo.completed);\n\n    setUncomplited(count.length);\n  }, [todos]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp newTodo={addTodo} />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onClick={toggleAll}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <TodoList items={todos} />\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {uncompleted}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}